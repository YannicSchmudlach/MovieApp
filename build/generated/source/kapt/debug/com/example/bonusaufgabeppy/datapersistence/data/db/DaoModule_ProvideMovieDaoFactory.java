// Generated by Dagger (https://dagger.dev).
package com.example.bonusaufgabeppy.datapersistence.data.db;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaoModule_ProvideMovieDaoFactory implements Factory<MovieDao> {
  private final DaoModule module;

  private final Provider<MovieDatabase> databaseProvider;

  public DaoModule_ProvideMovieDaoFactory(DaoModule module,
      Provider<MovieDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public MovieDao get() {
    return provideMovieDao(module, databaseProvider.get());
  }

  public static DaoModule_ProvideMovieDaoFactory create(DaoModule module,
      Provider<MovieDatabase> databaseProvider) {
    return new DaoModule_ProvideMovieDaoFactory(module, databaseProvider);
  }

  public static MovieDao provideMovieDao(DaoModule instance, MovieDatabase database) {
    return Preconditions.checkNotNullFromProvides(instance.provideMovieDao(database));
  }
}
