// Generated by Dagger (https://dagger.dev).
package com.example.bonusaufgabeppy.network.data.api;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import io.ktor.client.HttpClient;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class APIModule_ProvideHttpClientForApiFactory implements Factory<HttpClient> {
  @Override
  public HttpClient get() {
    return provideHttpClientForApi();
  }

  public static APIModule_ProvideHttpClientForApiFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static HttpClient provideHttpClientForApi() {
    return Preconditions.checkNotNullFromProvides(APIModule.INSTANCE.provideHttpClientForApi());
  }

  private static final class InstanceHolder {
    private static final APIModule_ProvideHttpClientForApiFactory INSTANCE = new APIModule_ProvideHttpClientForApiFactory();
  }
}
