// Generated by Dagger (https://dagger.dev).
package com.example.bonusaufgabeppy.movieDetails;

import com.example.bonusaufgabeppy.network.data.movie.MovieRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MovieDetailsViewModel_Factory implements Factory<MovieDetailsViewModel> {
  private final Provider<MovieRepository> movieRepositoryProvider;

  private final Provider<com.example.bonusaufgabeppy.datapersistence.data.MovieRepository> movieDbRepositoryProvider;

  public MovieDetailsViewModel_Factory(Provider<MovieRepository> movieRepositoryProvider,
      Provider<com.example.bonusaufgabeppy.datapersistence.data.MovieRepository> movieDbRepositoryProvider) {
    this.movieRepositoryProvider = movieRepositoryProvider;
    this.movieDbRepositoryProvider = movieDbRepositoryProvider;
  }

  @Override
  public MovieDetailsViewModel get() {
    return newInstance(movieRepositoryProvider.get(), movieDbRepositoryProvider.get());
  }

  public static MovieDetailsViewModel_Factory create(
      Provider<MovieRepository> movieRepositoryProvider,
      Provider<com.example.bonusaufgabeppy.datapersistence.data.MovieRepository> movieDbRepositoryProvider) {
    return new MovieDetailsViewModel_Factory(movieRepositoryProvider, movieDbRepositoryProvider);
  }

  public static MovieDetailsViewModel newInstance(MovieRepository movieRepository,
      com.example.bonusaufgabeppy.datapersistence.data.MovieRepository movieDbRepository) {
    return new MovieDetailsViewModel(movieRepository, movieDbRepository);
  }
}
