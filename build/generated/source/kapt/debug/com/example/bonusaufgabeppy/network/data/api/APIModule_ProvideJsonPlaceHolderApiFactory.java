// Generated by Dagger (https://dagger.dev).
package com.example.bonusaufgabeppy.network.data.api;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import io.ktor.client.HttpClient;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class APIModule_ProvideJsonPlaceHolderApiFactory implements Factory<MovieAPI> {
  private final Provider<HttpClient> clientProvider;

  public APIModule_ProvideJsonPlaceHolderApiFactory(Provider<HttpClient> clientProvider) {
    this.clientProvider = clientProvider;
  }

  @Override
  public MovieAPI get() {
    return provideJsonPlaceHolderApi(clientProvider.get());
  }

  public static APIModule_ProvideJsonPlaceHolderApiFactory create(
      Provider<HttpClient> clientProvider) {
    return new APIModule_ProvideJsonPlaceHolderApiFactory(clientProvider);
  }

  public static MovieAPI provideJsonPlaceHolderApi(HttpClient client) {
    return Preconditions.checkNotNullFromProvides(APIModule.INSTANCE.provideJsonPlaceHolderApi(client));
  }
}
