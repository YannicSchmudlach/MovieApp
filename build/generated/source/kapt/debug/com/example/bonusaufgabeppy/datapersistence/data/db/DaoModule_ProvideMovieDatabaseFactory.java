// Generated by Dagger (https://dagger.dev).
package com.example.bonusaufgabeppy.datapersistence.data.db;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaoModule_ProvideMovieDatabaseFactory implements Factory<MovieDatabase> {
  private final DaoModule module;

  private final Provider<Context> contextProvider;

  public DaoModule_ProvideMovieDatabaseFactory(DaoModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public MovieDatabase get() {
    return provideMovieDatabase(module, contextProvider.get());
  }

  public static DaoModule_ProvideMovieDatabaseFactory create(DaoModule module,
      Provider<Context> contextProvider) {
    return new DaoModule_ProvideMovieDatabaseFactory(module, contextProvider);
  }

  public static MovieDatabase provideMovieDatabase(DaoModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideMovieDatabase(context));
  }
}
